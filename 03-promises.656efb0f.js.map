{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAqBC,SAASC,cAAc,SAC5CC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAe3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAZPR,EAAmBiB,iBAAiB,UAXf,SAAAC,GACnBA,EAAEC,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOhB,EAAYiB,OAAQF,GAAK,EAAG,CAErDd,EAAcc,EAAI,EADNC,OAAOlB,EAAWmB,OAASD,OAAOjB,EAAUkB,OAASF,GAE9DG,MAAK,SAAAC,G,OAAWC,EAAA3B,GAAS4B,OAAOF,QAAQA,E,IACxCG,OAAM,SAAAC,G,OAASH,EAAA3B,GAAS4B,OAAOG,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createPromisesForm = document.querySelector('.form');\nconst delayValue = document.querySelector('input[name=\"delay\"]');\nconst stepDelay = document.querySelector('input[name=\"step\"]');\nconst amountValue = document.querySelector('input[name=\"amount\"]');\n\nconst onFormSubmit = e => {\n  e.preventDefault();\n\n  for (let i = 0; i < Number(amountValue.value); i += 1) {\n    let delay = Number(delayValue.value) + Number(stepDelay.value) * i;\n    createPromise(i + 1, delay)\n      .then(success => Notiflix.Notify.success(success))\n      .catch(error => Notiflix.Notify.failure(error));\n  }\n};\n\ncreatePromisesForm.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromisesForm","document","querySelector","$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amountValue","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","e","preventDefault","i","Number","value","then","success","$parcel$interopDefault","Notify","catch","error","failure"],"version":3,"file":"03-promises.656efb0f.js.map"}